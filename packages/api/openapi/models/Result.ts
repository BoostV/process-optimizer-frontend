/* tslint:disable */
/* eslint-disable */
/**
 * Process Optimizer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import type { ResultPlotsInner } from './ResultPlotsInner'
import {
  ResultPlotsInnerFromJSON,
  ResultPlotsInnerFromJSONTyped,
  ResultPlotsInnerToJSON,
} from './ResultPlotsInner'
import type { ResultResult } from './ResultResult'
import {
  ResultResultFromJSON,
  ResultResultFromJSONTyped,
  ResultResultToJSON,
} from './ResultResult'

/**
 *
 * @export
 * @interface Result
 */
export interface Result {
  /**
   *
   * @type {Array<ResultPlotsInner>}
   * @memberof Result
   */
  plots?: Array<ResultPlotsInner>
  /**
   *
   * @type {ResultResult}
   * @memberof Result
   */
  result?: ResultResult
}

/**
 * Check if a given object implements the Result interface.
 */
export function instanceOfResult(value: object): boolean {
  let isInstance = true

  return isInstance
}

export function ResultFromJSON(json: any): Result {
  return ResultFromJSONTyped(json, false)
}

export function ResultFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): Result {
  if (json === undefined || json === null) {
    return json
  }
  return {
    plots: !exists(json, 'plots')
      ? undefined
      : (json['plots'] as Array<any>).map(ResultPlotsInnerFromJSON),
    result: !exists(json, 'result')
      ? undefined
      : ResultResultFromJSON(json['result']),
  }
}

export function ResultToJSON(value?: Result | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    plots:
      value.plots === undefined
        ? undefined
        : (value.plots as Array<any>).map(ResultPlotsInnerToJSON),
    result: ResultResultToJSON(value.result),
  }
}
