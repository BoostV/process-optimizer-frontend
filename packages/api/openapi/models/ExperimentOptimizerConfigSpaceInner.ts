/* tslint:disable */
/* eslint-disable */
/**
 * Process Optimizer API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
/**
 *
 * @export
 * @interface ExperimentOptimizerConfigSpaceInner
 */
export interface ExperimentOptimizerConfigSpaceInner {
  /**
   * Type of the dimension. Can be category, discrete or continuous
   * @type {string}
   * @memberof ExperimentOptimizerConfigSpaceInner
   */
  type: string
  /**
   *
   * @type {string}
   * @memberof ExperimentOptimizerConfigSpaceInner
   */
  name: string
  /**
   *
   * @type {number}
   * @memberof ExperimentOptimizerConfigSpaceInner
   */
  from?: number
  /**
   *
   * @type {number}
   * @memberof ExperimentOptimizerConfigSpaceInner
   */
  to?: number
  /**
   *
   * @type {Array<string>}
   * @memberof ExperimentOptimizerConfigSpaceInner
   */
  categories?: Array<string>
}

/**
 * Check if a given object implements the ExperimentOptimizerConfigSpaceInner interface.
 */
export function instanceOfExperimentOptimizerConfigSpaceInner(
  value: object
): boolean {
  let isInstance = true
  isInstance = isInstance && 'type' in value
  isInstance = isInstance && 'name' in value

  return isInstance
}

export function ExperimentOptimizerConfigSpaceInnerFromJSON(
  json: any
): ExperimentOptimizerConfigSpaceInner {
  return ExperimentOptimizerConfigSpaceInnerFromJSONTyped(json, false)
}

export function ExperimentOptimizerConfigSpaceInnerFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean
): ExperimentOptimizerConfigSpaceInner {
  if (json === undefined || json === null) {
    return json
  }
  return {
    type: json['type'],
    name: json['name'],
    from: !exists(json, 'from') ? undefined : json['from'],
    to: !exists(json, 'to') ? undefined : json['to'],
    categories: !exists(json, 'categories') ? undefined : json['categories'],
  }
}

export function ExperimentOptimizerConfigSpaceInnerToJSON(
  value?: ExperimentOptimizerConfigSpaceInner | null
): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    type: value.type,
    name: value.name,
    from: value.from,
    to: value.to,
    categories: value.categories,
  }
}
